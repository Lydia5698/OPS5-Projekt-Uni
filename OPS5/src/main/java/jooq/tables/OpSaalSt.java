/*
 * This file is generated by jOOQ.
 */
package jooq.tables;


import jooq.Keys;
import jooq.Pmiw21g05V01;
import jooq.tables.records.OpSaalStRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpSaalSt extends TableImpl<OpSaalStRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>pmiw21g05_v01.op_saal_st</code>
     */
    public static final OpSaalSt OP_SAAL_ST = new OpSaalSt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OpSaalStRecord> getRecordType() {
        return OpSaalStRecord.class;
    }

    /**
     * The column <code>pmiw21g05_v01.op_saal_st.code</code>.
     */
    public final TableField<OpSaalStRecord, Integer> CODE = createField(DSL.name("code"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>pmiw21g05_v01.op_saal_st.beschreibung</code>.
     */
    public final TableField<OpSaalStRecord, String> BESCHREIBUNG = createField(DSL.name("beschreibung"), SQLDataType.VARCHAR(100).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    private OpSaalSt(Name alias, Table<OpSaalStRecord> aliased) {
        this(alias, aliased, null);
    }

    private OpSaalSt(Name alias, Table<OpSaalStRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>pmiw21g05_v01.op_saal_st</code> table reference
     */
    public OpSaalSt(String alias) {
        this(DSL.name(alias), OP_SAAL_ST);
    }

    /**
     * Create an aliased <code>pmiw21g05_v01.op_saal_st</code> table reference
     */
    public OpSaalSt(Name alias) {
        this(alias, OP_SAAL_ST);
    }

    /**
     * Create a <code>pmiw21g05_v01.op_saal_st</code> table reference
     */
    public OpSaalSt() {
        this(DSL.name("op_saal_st"), null);
    }

    public <O extends Record> OpSaalSt(Table<O> child, ForeignKey<O, OpSaalStRecord> key) {
        super(child, key, OP_SAAL_ST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Pmiw21g05V01.PMIW21G05_V01;
    }

    @Override
    public Identity<OpSaalStRecord, Integer> getIdentity() {
        return (Identity<OpSaalStRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<OpSaalStRecord> getPrimaryKey() {
        return Keys.KEY_OP_SAAL_ST_PRIMARY;
    }

    @Override
    public OpSaalSt as(String alias) {
        return new OpSaalSt(DSL.name(alias), this);
    }

    @Override
    public OpSaalSt as(Name alias) {
        return new OpSaalSt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OpSaalSt rename(String name) {
        return new OpSaalSt(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OpSaalSt rename(Name name) {
        return new OpSaalSt(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import jooq.tables.OpSaalSt;
import jooq.tables.records.OpSaalStRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpSaalStDao extends DAOImpl<OpSaalStRecord, jooq.tables.pojos.OpSaalSt, Integer> {

    /**
     * Create a new OpSaalStDao without any configuration
     */
    public OpSaalStDao() {
        super(OpSaalSt.OP_SAAL_ST, jooq.tables.pojos.OpSaalSt.class);
    }

    /**
     * Create a new OpSaalStDao with an attached configuration
     */
    public OpSaalStDao(Configuration configuration) {
        super(OpSaalSt.OP_SAAL_ST, jooq.tables.pojos.OpSaalSt.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.OpSaalSt object) {
        return object.getCode();
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.OpSaalSt> fetchRangeOfCode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(OpSaalSt.OP_SAAL_ST.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<jooq.tables.pojos.OpSaalSt> fetchByCode(Integer... values) {
        return fetch(OpSaalSt.OP_SAAL_ST.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public jooq.tables.pojos.OpSaalSt fetchOneByCode(Integer value) {
        return fetchOne(OpSaalSt.OP_SAAL_ST.CODE, value);
    }

    /**
     * Fetch records that have <code>beschreibung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.OpSaalSt> fetchRangeOfBeschreibung(String lowerInclusive, String upperInclusive) {
        return fetchRange(OpSaalSt.OP_SAAL_ST.BESCHREIBUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>beschreibung IN (values)</code>
     */
    public List<jooq.tables.pojos.OpSaalSt> fetchByBeschreibung(String... values) {
        return fetch(OpSaalSt.OP_SAAL_ST.BESCHREIBUNG, values);
    }
}

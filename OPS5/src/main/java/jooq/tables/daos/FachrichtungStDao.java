/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import jooq.tables.FachrichtungSt;
import jooq.tables.records.FachrichtungStRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FachrichtungStDao extends DAOImpl<FachrichtungStRecord, jooq.tables.pojos.FachrichtungSt, String> {

    /**
     * Create a new FachrichtungStDao without any configuration
     */
    public FachrichtungStDao() {
        super(FachrichtungSt.FACHRICHTUNG_ST, jooq.tables.pojos.FachrichtungSt.class);
    }

    /**
     * Create a new FachrichtungStDao with an attached configuration
     */
    public FachrichtungStDao(Configuration configuration) {
        super(FachrichtungSt.FACHRICHTUNG_ST, jooq.tables.pojos.FachrichtungSt.class, configuration);
    }

    @Override
    public String getId(jooq.tables.pojos.FachrichtungSt object) {
        return object.getAbteilung();
    }

    /**
     * Fetch records that have <code>abteilung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchRangeOfAbteilung(String lowerInclusive, String upperInclusive) {
        return fetchRange(FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>abteilung IN (values)</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchByAbteilung(String... values) {
        return fetch(FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG, values);
    }

    /**
     * Fetch a unique record that has <code>abteilung = value</code>
     */
    public jooq.tables.pojos.FachrichtungSt fetchOneByAbteilung(String value) {
        return fetchOne(FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG, value);
    }

    /**
     * Fetch records that have <code>bezeichnung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchRangeOfBezeichnung(String lowerInclusive, String upperInclusive) {
        return fetchRange(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bezeichnung IN (values)</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchByBezeichnung(String... values) {
        return fetch(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG, values);
    }

    /**
     * Fetch records that have <code>bezeichnung_lang BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchRangeOfBezeichnungLang(String lowerInclusive, String upperInclusive) {
        return fetchRange(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG_LANG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bezeichnung_lang IN (values)</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchByBezeichnungLang(String... values) {
        return fetch(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG_LANG, values);
    }

    /**
     * Fetch records that have <code>abteilungstyp BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchRangeOfAbteilungstyp(String lowerInclusive, String upperInclusive) {
        return fetchRange(FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNGSTYP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>abteilungstyp IN (values)</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchByAbteilungstyp(String... values) {
        return fetch(FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNGSTYP, values);
    }

    /**
     * Fetch records that have <code>bezeichnung_lang_2 BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchRangeOfBezeichnungLang_2(String lowerInclusive, String upperInclusive) {
        return fetchRange(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG_LANG_2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bezeichnung_lang_2 IN (values)</code>
     */
    public List<jooq.tables.pojos.FachrichtungSt> fetchByBezeichnungLang_2(String... values) {
        return fetch(FachrichtungSt.FACHRICHTUNG_ST.BEZEICHNUNG_LANG_2, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

import jooq.tables.Patient;
import jooq.tables.records.PatientRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientDao extends DAOImpl<PatientRecord, jooq.tables.pojos.Patient, Integer> {

    /**
     * Create a new PatientDao without any configuration
     */
    public PatientDao() {
        super(Patient.PATIENT, jooq.tables.pojos.Patient.class);
    }

    /**
     * Create a new PatientDao with an attached configuration
     */
    public PatientDao(Configuration configuration) {
        super(Patient.PATIENT, jooq.tables.pojos.Patient.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.Patient object) {
        return object.getPatId();
    }

    /**
     * Fetch records that have <code>pat_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfPatId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Patient.PATIENT.PAT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pat_id IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByPatId(Integer... values) {
        return fetch(Patient.PATIENT.PAT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>pat_id = value</code>
     */
    public jooq.tables.pojos.Patient fetchOneByPatId(Integer value) {
        return fetchOne(Patient.PATIENT.PAT_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByName(String... values) {
        return fetch(Patient.PATIENT.NAME, values);
    }

    /**
     * Fetch records that have <code>vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vorname IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByVorname(String... values) {
        return fetch(Patient.PATIENT.VORNAME, values);
    }

    /**
     * Fetch records that have <code>geburtsdatum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfGeburtsdatum(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Patient.PATIENT.GEBURTSDATUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>geburtsdatum IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByGeburtsdatum(LocalDate... values) {
        return fetch(Patient.PATIENT.GEBURTSDATUM, values);
    }

    /**
     * Fetch records that have <code>blutgruppe BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfBlutgruppe(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.BLUTGRUPPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>blutgruppe IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByBlutgruppe(String... values) {
        return fetch(Patient.PATIENT.BLUTGRUPPE, values);
    }

    /**
     * Fetch records that have <code>geschlecht BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfGeschlecht(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.GESCHLECHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>geschlecht IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByGeschlecht(String... values) {
        return fetch(Patient.PATIENT.GESCHLECHT, values);
    }

    /**
     * Fetch records that have <code>bearbeiter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfBearbeiter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.BEARBEITER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bearbeiter IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByBearbeiter(String... values) {
        return fetch(Patient.PATIENT.BEARBEITER, values);
    }

    /**
     * Fetch records that have <code>bearbeiter_zeit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfBearbeiterZeit(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Patient.PATIENT.BEARBEITER_ZEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bearbeiter_zeit IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByBearbeiterZeit(LocalDateTime... values) {
        return fetch(Patient.PATIENT.BEARBEITER_ZEIT, values);
    }

    /**
     * Fetch records that have <code>ersteller BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfErsteller(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.ERSTELLER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ersteller IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByErsteller(String... values) {
        return fetch(Patient.PATIENT.ERSTELLER, values);
    }

    /**
     * Fetch records that have <code>erstell_zeit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfErstellZeit(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Patient.PATIENT.ERSTELL_ZEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>erstell_zeit IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByErstellZeit(LocalDateTime... values) {
        return fetch(Patient.PATIENT.ERSTELL_ZEIT, values);
    }

    /**
     * Fetch records that have <code>storniert BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfStorniert(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Patient.PATIENT.STORNIERT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>storniert IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByStorniert(Byte... values) {
        return fetch(Patient.PATIENT.STORNIERT, values);
    }

    /**
     * Fetch records that have <code>geburtsort BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfGeburtsort(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.GEBURTSORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>geburtsort IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByGeburtsort(String... values) {
        return fetch(Patient.PATIENT.GEBURTSORT, values);
    }

    /**
     * Fetch records that have <code>strasse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfStrasse(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.STRASSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>strasse IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByStrasse(String... values) {
        return fetch(Patient.PATIENT.STRASSE, values);
    }

    /**
     * Fetch records that have <code>postleitzahl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfPostleitzahl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.POSTLEITZAHL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postleitzahl IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByPostleitzahl(String... values) {
        return fetch(Patient.PATIENT.POSTLEITZAHL, values);
    }

    /**
     * Fetch records that have <code>telefonnummer BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Patient> fetchRangeOfTelefonnummer(String lowerInclusive, String upperInclusive) {
        return fetchRange(Patient.PATIENT.TELEFONNUMMER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefonnummer IN (values)</code>
     */
    public List<jooq.tables.pojos.Patient> fetchByTelefonnummer(String... values) {
        return fetch(Patient.PATIENT.TELEFONNUMMER, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import jooq.tables.DiagnosetypSt;
import jooq.tables.records.DiagnosetypStRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiagnosetypStDao extends DAOImpl<DiagnosetypStRecord, jooq.tables.pojos.DiagnosetypSt, Integer> {

    /**
     * Create a new DiagnosetypStDao without any configuration
     */
    public DiagnosetypStDao() {
        super(DiagnosetypSt.DIAGNOSETYP_ST, jooq.tables.pojos.DiagnosetypSt.class);
    }

    /**
     * Create a new DiagnosetypStDao with an attached configuration
     */
    public DiagnosetypStDao(Configuration configuration) {
        super(DiagnosetypSt.DIAGNOSETYP_ST, jooq.tables.pojos.DiagnosetypSt.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.DiagnosetypSt object) {
        return object.getDiagnosetyp();
    }

    /**
     * Fetch records that have <code>diagnosetyp BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.DiagnosetypSt> fetchRangeOfDiagnosetyp(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DiagnosetypSt.DIAGNOSETYP_ST.DIAGNOSETYP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diagnosetyp IN (values)</code>
     */
    public List<jooq.tables.pojos.DiagnosetypSt> fetchByDiagnosetyp(Integer... values) {
        return fetch(DiagnosetypSt.DIAGNOSETYP_ST.DIAGNOSETYP, values);
    }

    /**
     * Fetch a unique record that has <code>diagnosetyp = value</code>
     */
    public jooq.tables.pojos.DiagnosetypSt fetchOneByDiagnosetyp(Integer value) {
        return fetchOne(DiagnosetypSt.DIAGNOSETYP_ST.DIAGNOSETYP, value);
    }

    /**
     * Fetch records that have <code>beschreibung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.DiagnosetypSt> fetchRangeOfBeschreibung(String lowerInclusive, String upperInclusive) {
        return fetchRange(DiagnosetypSt.DIAGNOSETYP_ST.BESCHREIBUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>beschreibung IN (values)</code>
     */
    public List<jooq.tables.pojos.DiagnosetypSt> fetchByBeschreibung(String... values) {
        return fetch(DiagnosetypSt.DIAGNOSETYP_ST.BESCHREIBUNG, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import jooq.tables.OpTypSt;
import jooq.tables.records.OpTypStRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpTypStDao extends DAOImpl<OpTypStRecord, jooq.tables.pojos.OpTypSt, Integer> {

    /**
     * Create a new OpTypStDao without any configuration
     */
    public OpTypStDao() {
        super(OpTypSt.OP_TYP_ST, jooq.tables.pojos.OpTypSt.class);
    }

    /**
     * Create a new OpTypStDao with an attached configuration
     */
    public OpTypStDao(Configuration configuration) {
        super(OpTypSt.OP_TYP_ST, jooq.tables.pojos.OpTypSt.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.OpTypSt object) {
        return object.getOpTyp();
    }

    /**
     * Fetch records that have <code>op_typ BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.OpTypSt> fetchRangeOfOpTyp(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(OpTypSt.OP_TYP_ST.OP_TYP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op_typ IN (values)</code>
     */
    public List<jooq.tables.pojos.OpTypSt> fetchByOpTyp(Integer... values) {
        return fetch(OpTypSt.OP_TYP_ST.OP_TYP, values);
    }

    /**
     * Fetch a unique record that has <code>op_typ = value</code>
     */
    public jooq.tables.pojos.OpTypSt fetchOneByOpTyp(Integer value) {
        return fetchOne(OpTypSt.OP_TYP_ST.OP_TYP, value);
    }

    /**
     * Fetch records that have <code>beschreibung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.OpTypSt> fetchRangeOfBeschreibung(String lowerInclusive, String upperInclusive) {
        return fetchRange(OpTypSt.OP_TYP_ST.BESCHREIBUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>beschreibung IN (values)</code>
     */
    public List<jooq.tables.pojos.OpTypSt> fetchByBeschreibung(String... values) {
        return fetch(OpTypSt.OP_TYP_ST.BESCHREIBUNG, values);
    }
}

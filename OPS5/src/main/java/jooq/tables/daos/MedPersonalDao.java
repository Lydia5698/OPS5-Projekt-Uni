/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;

import jooq.tables.MedPersonal;
import jooq.tables.records.MedPersonalRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedPersonalDao extends DAOImpl<MedPersonalRecord, jooq.tables.pojos.MedPersonal, String> {

    /**
     * Create a new MedPersonalDao without any configuration
     */
    public MedPersonalDao() {
        super(MedPersonal.MED_PERSONAL, jooq.tables.pojos.MedPersonal.class);
    }

    /**
     * Create a new MedPersonalDao with an attached configuration
     */
    public MedPersonalDao(Configuration configuration) {
        super(MedPersonal.MED_PERSONAL, jooq.tables.pojos.MedPersonal.class, configuration);
    }

    @Override
    public String getId(jooq.tables.pojos.MedPersonal object) {
        return object.getPersId();
    }

    /**
     * Fetch records that have <code>pers_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfPersId(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.PERS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pers_ID IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByPersId(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.PERS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>pers_ID = value</code>
     */
    public jooq.tables.pojos.MedPersonal fetchOneByPersId(String value) {
        return fetchOne(MedPersonal.MED_PERSONAL.PERS_ID, value);
    }

    /**
     * Fetch records that have <code>nachname_vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfNachnameVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.NACHNAME_VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nachname_vorname IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByNachnameVorname(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.NACHNAME_VORNAME, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByName(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.NAME, values);
    }

    /**
     * Fetch records that have <code>vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vorname IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByVorname(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.VORNAME, values);
    }

    /**
     * Fetch records that have <code>titel BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfTitel(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.TITEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>titel IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByTitel(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.TITEL, values);
    }

    /**
     * Fetch records that have <code>anrede BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfAnrede(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.ANREDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>anrede IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByAnrede(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.ANREDE, values);
    }

    /**
     * Fetch records that have <code>strasse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfStrasse(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.STRASSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>strasse IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByStrasse(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.STRASSE, values);
    }

    /**
     * Fetch records that have <code>strasse_2 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfStrasse_2(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.STRASSE_2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>strasse_2 IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByStrasse_2(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.STRASSE_2, values);
    }

    /**
     * Fetch records that have <code>land BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfLand(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.LAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>land IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByLand(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.LAND, values);
    }

    /**
     * Fetch records that have <code>plz BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfPlz(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.PLZ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plz IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByPlz(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.PLZ, values);
    }

    /**
     * Fetch records that have <code>stadt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfStadt(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.STADT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stadt IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByStadt(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.STADT, values);
    }

    /**
     * Fetch records that have <code>telefonnummer BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfTelefonnummer(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.TELEFONNUMMER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefonnummer IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByTelefonnummer(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.TELEFONNUMMER, values);
    }

    /**
     * Fetch records that have <code>fachrichtung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfFachrichtung(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.FACHRICHTUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fachrichtung IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByFachrichtung(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.FACHRICHTUNG, values);
    }

    /**
     * Fetch records that have <code>fachrichtung_kurz BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchRangeOfFachrichtungKurz(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedPersonal.MED_PERSONAL.FACHRICHTUNG_KURZ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fachrichtung_kurz IN (values)</code>
     */
    public List<jooq.tables.pojos.MedPersonal> fetchByFachrichtungKurz(String... values) {
        return fetch(MedPersonal.MED_PERSONAL.FACHRICHTUNG_KURZ, values);
    }
}

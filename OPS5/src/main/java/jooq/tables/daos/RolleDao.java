/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import jooq.tables.Rolle;
import jooq.tables.records.RolleRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolleDao extends DAOImpl<RolleRecord, jooq.tables.pojos.Rolle, Record2<Integer, String>> {

    /**
     * Create a new RolleDao without any configuration
     */
    public RolleDao() {
        super(Rolle.ROLLE, jooq.tables.pojos.Rolle.class);
    }

    /**
     * Create a new RolleDao with an attached configuration
     */
    public RolleDao(Configuration configuration) {
        super(Rolle.ROLLE, jooq.tables.pojos.Rolle.class, configuration);
    }

    @Override
    public Record2<Integer, String> getId(jooq.tables.pojos.Rolle object) {
        return compositeKeyRecord(object.getOpId(), object.getMedPersonalPersId());
    }

    /**
     * Fetch records that have <code>op_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfOpId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Rolle.ROLLE.OP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>op_id IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByOpId(Integer... values) {
        return fetch(Rolle.ROLLE.OP_ID, values);
    }

    /**
     * Fetch records that have <code>bearbeiter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfBearbeiter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Rolle.ROLLE.BEARBEITER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bearbeiter IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByBearbeiter(String... values) {
        return fetch(Rolle.ROLLE.BEARBEITER, values);
    }

    /**
     * Fetch records that have <code>rolle_st BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfRolleSt(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Rolle.ROLLE.ROLLE_ST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rolle_st IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByRolleSt(Integer... values) {
        return fetch(Rolle.ROLLE.ROLLE_ST, values);
    }

    /**
     * Fetch records that have <code>bearbeiter_zeit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfBearbeiterZeit(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Rolle.ROLLE.BEARBEITER_ZEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bearbeiter_zeit IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByBearbeiterZeit(LocalDateTime... values) {
        return fetch(Rolle.ROLLE.BEARBEITER_ZEIT, values);
    }

    /**
     * Fetch records that have <code>erstell_zeit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfErstellZeit(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Rolle.ROLLE.ERSTELL_ZEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>erstell_zeit IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByErstellZeit(LocalDateTime... values) {
        return fetch(Rolle.ROLLE.ERSTELL_ZEIT, values);
    }

    /**
     * Fetch records that have <code>ersteller BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfErsteller(String lowerInclusive, String upperInclusive) {
        return fetchRange(Rolle.ROLLE.ERSTELLER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ersteller IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByErsteller(String... values) {
        return fetch(Rolle.ROLLE.ERSTELLER, values);
    }

    /**
     * Fetch records that have <code>med_personal_pers_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfMedPersonalPersId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Rolle.ROLLE.MED_PERSONAL_PERS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>med_personal_pers_ID IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByMedPersonalPersId(String... values) {
        return fetch(Rolle.ROLLE.MED_PERSONAL_PERS_ID, values);
    }

    /**
     * Fetch records that have <code>storniert BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchRangeOfStorniert(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Rolle.ROLLE.STORNIERT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>storniert IN (values)</code>
     */
    public List<jooq.tables.pojos.Rolle> fetchByStorniert(Byte... values) {
        return fetch(Rolle.ROLLE.STORNIERT, values);
    }
}

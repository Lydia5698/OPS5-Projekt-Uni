/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.RolleSt;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolleStRecord extends UpdatableRecordImpl<RolleStRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pmiw21g05_v01.rolle_st.rolle</code>.
     */
    public void setRolle(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pmiw21g05_v01.rolle_st.rolle</code>.
     */
    public Integer getRolle() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pmiw21g05_v01.rolle_st.bezeichnung</code>.
     */
    public void setBezeichnung(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pmiw21g05_v01.rolle_st.bezeichnung</code>.
     */
    public String getBezeichnung() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RolleSt.ROLLE_ST.ROLLE;
    }

    @Override
    public Field<String> field2() {
        return RolleSt.ROLLE_ST.BEZEICHNUNG;
    }

    @Override
    public Integer component1() {
        return getRolle();
    }

    @Override
    public String component2() {
        return getBezeichnung();
    }

    @Override
    public Integer value1() {
        return getRolle();
    }

    @Override
    public String value2() {
        return getBezeichnung();
    }

    @Override
    public RolleStRecord value1(Integer value) {
        setRolle(value);
        return this;
    }

    @Override
    public RolleStRecord value2(String value) {
        setBezeichnung(value);
        return this;
    }

    @Override
    public RolleStRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolleStRecord
     */
    public RolleStRecord() {
        super(RolleSt.ROLLE_ST);
    }

    /**
     * Create a detached, initialised RolleStRecord
     */
    public RolleStRecord(Integer rolle, String bezeichnung) {
        super(RolleSt.ROLLE_ST);

        setRolle(rolle);
        setBezeichnung(bezeichnung);
    }

    /**
     * Create a detached, initialised RolleStRecord
     */
    public RolleStRecord(jooq.tables.pojos.RolleSt value) {
        super(RolleSt.ROLLE_ST);

        if (value != null) {
            setRolle(value.getRolle());
            setBezeichnung(value.getBezeichnung());
        }
    }
}

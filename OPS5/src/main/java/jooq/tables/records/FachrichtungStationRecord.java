/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.FachrichtungStation;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FachrichtungStationRecord extends UpdatableRecordImpl<FachrichtungStationRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>pmiw21g05_v01.fachrichtung_station.fachrichtung_st</code>.
     */
    public void setFachrichtungSt(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>pmiw21g05_v01.fachrichtung_station.fachrichtung_st</code>.
     */
    public String getFachrichtungSt() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pmiw21g05_v01.fachrichtung_station.station_st</code>.
     */
    public void setStationSt(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pmiw21g05_v01.fachrichtung_station.station_st</code>.
     */
    public String getStationSt() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FachrichtungStation.FACHRICHTUNG_STATION.FACHRICHTUNG_ST;
    }

    @Override
    public Field<String> field2() {
        return FachrichtungStation.FACHRICHTUNG_STATION.STATION_ST;
    }

    @Override
    public String component1() {
        return getFachrichtungSt();
    }

    @Override
    public String component2() {
        return getStationSt();
    }

    @Override
    public String value1() {
        return getFachrichtungSt();
    }

    @Override
    public String value2() {
        return getStationSt();
    }

    @Override
    public FachrichtungStationRecord value1(String value) {
        setFachrichtungSt(value);
        return this;
    }

    @Override
    public FachrichtungStationRecord value2(String value) {
        setStationSt(value);
        return this;
    }

    @Override
    public FachrichtungStationRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FachrichtungStationRecord
     */
    public FachrichtungStationRecord() {
        super(FachrichtungStation.FACHRICHTUNG_STATION);
    }

    /**
     * Create a detached, initialised FachrichtungStationRecord
     */
    public FachrichtungStationRecord(String fachrichtungSt, String stationSt) {
        super(FachrichtungStation.FACHRICHTUNG_STATION);

        setFachrichtungSt(fachrichtungSt);
        setStationSt(stationSt);
    }

    /**
     * Create a detached, initialised FachrichtungStationRecord
     */
    public FachrichtungStationRecord(jooq.tables.pojos.FachrichtungStation value) {
        super(FachrichtungStation.FACHRICHTUNG_STATION);

        if (value != null) {
            setFachrichtungSt(value.getFachrichtungSt());
            setStationSt(value.getStationSt());
        }
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.OpsCodeSt;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpsCodeStRecord extends UpdatableRecordImpl<OpsCodeStRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pmiw21g05_v01.ops_code_st.ops_code</code>.
     */
    public void setOpsCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pmiw21g05_v01.ops_code_st.ops_code</code>.
     */
    public String getOpsCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pmiw21g05_v01.ops_code_st.beschreibung</code>.
     */
    public void setBeschreibung(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pmiw21g05_v01.ops_code_st.beschreibung</code>.
     */
    public String getBeschreibung() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OpsCodeSt.OPS_CODE_ST.OPS_CODE;
    }

    @Override
    public Field<String> field2() {
        return OpsCodeSt.OPS_CODE_ST.BESCHREIBUNG;
    }

    @Override
    public String component1() {
        return getOpsCode();
    }

    @Override
    public String component2() {
        return getBeschreibung();
    }

    @Override
    public String value1() {
        return getOpsCode();
    }

    @Override
    public String value2() {
        return getBeschreibung();
    }

    @Override
    public OpsCodeStRecord value1(String value) {
        setOpsCode(value);
        return this;
    }

    @Override
    public OpsCodeStRecord value2(String value) {
        setBeschreibung(value);
        return this;
    }

    @Override
    public OpsCodeStRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OpsCodeStRecord
     */
    public OpsCodeStRecord() {
        super(OpsCodeSt.OPS_CODE_ST);
    }

    /**
     * Create a detached, initialised OpsCodeStRecord
     */
    public OpsCodeStRecord(String opsCode, String beschreibung) {
        super(OpsCodeSt.OPS_CODE_ST);

        setOpsCode(opsCode);
        setBeschreibung(beschreibung);
    }

    /**
     * Create a detached, initialised OpsCodeStRecord
     */
    public OpsCodeStRecord(jooq.tables.pojos.OpsCodeSt value) {
        super(OpsCodeSt.OPS_CODE_ST);

        if (value != null) {
            setOpsCode(value.getOpsCode());
            setBeschreibung(value.getBeschreibung());
        }
    }
}

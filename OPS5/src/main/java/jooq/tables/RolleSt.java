/*
 * This file is generated by jOOQ.
 */
package jooq.tables;


import jooq.Keys;
import jooq.Pmiw21g05V01;
import jooq.tables.records.RolleStRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolleSt extends TableImpl<RolleStRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>pmiw21g05_v01.rolle_st</code>
     */
    public static final RolleSt ROLLE_ST = new RolleSt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolleStRecord> getRecordType() {
        return RolleStRecord.class;
    }

    /**
     * The column <code>pmiw21g05_v01.rolle_st.rolle</code>.
     */
    public final TableField<RolleStRecord, Integer> ROLLE = createField(DSL.name("rolle"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>pmiw21g05_v01.rolle_st.bezeichnung</code>.
     */
    public final TableField<RolleStRecord, String> BEZEICHNUNG = createField(DSL.name("bezeichnung"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    private RolleSt(Name alias, Table<RolleStRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolleSt(Name alias, Table<RolleStRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>pmiw21g05_v01.rolle_st</code> table reference
     */
    public RolleSt(String alias) {
        this(DSL.name(alias), ROLLE_ST);
    }

    /**
     * Create an aliased <code>pmiw21g05_v01.rolle_st</code> table reference
     */
    public RolleSt(Name alias) {
        this(alias, ROLLE_ST);
    }

    /**
     * Create a <code>pmiw21g05_v01.rolle_st</code> table reference
     */
    public RolleSt() {
        this(DSL.name("rolle_st"), null);
    }

    public <O extends Record> RolleSt(Table<O> child, ForeignKey<O, RolleStRecord> key) {
        super(child, key, ROLLE_ST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Pmiw21g05V01.PMIW21G05_V01;
    }

    @Override
    public Identity<RolleStRecord, Integer> getIdentity() {
        return (Identity<RolleStRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RolleStRecord> getPrimaryKey() {
        return Keys.KEY_ROLLE_ST_PRIMARY;
    }

    @Override
    public RolleSt as(String alias) {
        return new RolleSt(DSL.name(alias), this);
    }

    @Override
    public RolleSt as(Name alias) {
        return new RolleSt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolleSt rename(String name) {
        return new RolleSt(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RolleSt rename(Name name) {
        return new RolleSt(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}

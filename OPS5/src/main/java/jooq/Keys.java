/*
 * This file is generated by jOOQ.
 */
package jooq;


import jooq.tables.BlutgruppeSt;
import jooq.tables.Diagnose;
import jooq.tables.DiagnosetypSt;
import jooq.tables.FachrichtungSt;
import jooq.tables.FachrichtungStation;
import jooq.tables.Fall;
import jooq.tables.FallTypSt;
import jooq.tables.GeschlechtSt;
import jooq.tables.Icd10CodeSt;
import jooq.tables.MedPersonal;
import jooq.tables.NarkoseSt;
import jooq.tables.OpSaalSt;
import jooq.tables.OpTypSt;
import jooq.tables.Operation;
import jooq.tables.OpsCodeSt;
import jooq.tables.Patient;
import jooq.tables.Prozedur;
import jooq.tables.Rolle;
import jooq.tables.RolleSt;
import jooq.tables.StationSt;
import jooq.tables.records.BlutgruppeStRecord;
import jooq.tables.records.DiagnoseRecord;
import jooq.tables.records.DiagnosetypStRecord;
import jooq.tables.records.FachrichtungStRecord;
import jooq.tables.records.FachrichtungStationRecord;
import jooq.tables.records.FallRecord;
import jooq.tables.records.FallTypStRecord;
import jooq.tables.records.GeschlechtStRecord;
import jooq.tables.records.Icd10CodeStRecord;
import jooq.tables.records.MedPersonalRecord;
import jooq.tables.records.NarkoseStRecord;
import jooq.tables.records.OpSaalStRecord;
import jooq.tables.records.OpTypStRecord;
import jooq.tables.records.OperationRecord;
import jooq.tables.records.OpsCodeStRecord;
import jooq.tables.records.PatientRecord;
import jooq.tables.records.ProzedurRecord;
import jooq.tables.records.RolleRecord;
import jooq.tables.records.RolleStRecord;
import jooq.tables.records.StationStRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * pmiw21g05_v01.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BlutgruppeStRecord> KEY_BLUTGRUPPE_ST_PRIMARY = Internal.createUniqueKey(BlutgruppeSt.BLUTGRUPPE_ST, DSL.name("KEY_blutgruppe_st_PRIMARY"), new TableField[] { BlutgruppeSt.BLUTGRUPPE_ST.BLUTGRUPPE }, true);
    public static final UniqueKey<DiagnoseRecord> KEY_DIAGNOSE_PRIMARY = Internal.createUniqueKey(Diagnose.DIAGNOSE, DSL.name("KEY_diagnose_PRIMARY"), new TableField[] { Diagnose.DIAGNOSE.DIAGNOSE_ID }, true);
    public static final UniqueKey<DiagnosetypStRecord> KEY_DIAGNOSETYP_ST_PRIMARY = Internal.createUniqueKey(DiagnosetypSt.DIAGNOSETYP_ST, DSL.name("KEY_diagnosetyp_st_PRIMARY"), new TableField[] { DiagnosetypSt.DIAGNOSETYP_ST.DIAGNOSETYP }, true);
    public static final UniqueKey<FachrichtungStRecord> KEY_FACHRICHTUNG_ST_PRIMARY = Internal.createUniqueKey(FachrichtungSt.FACHRICHTUNG_ST, DSL.name("KEY_fachrichtung_st_PRIMARY"), new TableField[] { FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG }, true);
    public static final UniqueKey<FachrichtungStationRecord> KEY_FACHRICHTUNG_STATION_PRIMARY = Internal.createUniqueKey(FachrichtungStation.FACHRICHTUNG_STATION, DSL.name("KEY_fachrichtung_station_PRIMARY"), new TableField[] { FachrichtungStation.FACHRICHTUNG_STATION.FACHRICHTUNG_ST, FachrichtungStation.FACHRICHTUNG_STATION.STATION_ST }, true);
    public static final UniqueKey<FallRecord> KEY_FALL_PRIMARY = Internal.createUniqueKey(Fall.FALL, DSL.name("KEY_fall_PRIMARY"), new TableField[] { Fall.FALL.FALL_ID }, true);
    public static final UniqueKey<FallTypStRecord> KEY_FALL_TYP_ST_PRIMARY = Internal.createUniqueKey(FallTypSt.FALL_TYP_ST, DSL.name("KEY_fall_typ_st_PRIMARY"), new TableField[] { FallTypSt.FALL_TYP_ST.FALL_TYP_ID }, true);
    public static final UniqueKey<GeschlechtStRecord> KEY_GESCHLECHT_ST_PRIMARY = Internal.createUniqueKey(GeschlechtSt.GESCHLECHT_ST, DSL.name("KEY_geschlecht_st_PRIMARY"), new TableField[] { GeschlechtSt.GESCHLECHT_ST.GESCHLECHT }, true);
    public static final UniqueKey<Icd10CodeStRecord> KEY_ICD10_CODE_ST_PRIMARY = Internal.createUniqueKey(Icd10CodeSt.ICD10_CODE_ST, DSL.name("KEY_icd10_code_st_PRIMARY"), new TableField[] { Icd10CodeSt.ICD10_CODE_ST.ICD10_CODE }, true);
    public static final UniqueKey<MedPersonalRecord> KEY_MED_PERSONAL_PRIMARY = Internal.createUniqueKey(MedPersonal.MED_PERSONAL, DSL.name("KEY_med_personal_PRIMARY"), new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final UniqueKey<NarkoseStRecord> KEY_NARKOSE_ST_NARKOSE = Internal.createUniqueKey(NarkoseSt.NARKOSE_ST, DSL.name("KEY_narkose_st_narkose"), new TableField[] { NarkoseSt.NARKOSE_ST.NARKOSE }, true);
    public static final UniqueKey<NarkoseStRecord> KEY_NARKOSE_ST_PRIMARY = Internal.createUniqueKey(NarkoseSt.NARKOSE_ST, DSL.name("KEY_narkose_st_PRIMARY"), new TableField[] { NarkoseSt.NARKOSE_ST.NARKOSE }, true);
    public static final UniqueKey<OpSaalStRecord> KEY_OP_SAAL_ST_PRIMARY = Internal.createUniqueKey(OpSaalSt.OP_SAAL_ST, DSL.name("KEY_op_saal_st_PRIMARY"), new TableField[] { OpSaalSt.OP_SAAL_ST.CODE }, true);
    public static final UniqueKey<OpTypStRecord> KEY_OP_TYP_ST_PRIMARY = Internal.createUniqueKey(OpTypSt.OP_TYP_ST, DSL.name("KEY_op_typ_st_PRIMARY"), new TableField[] { OpTypSt.OP_TYP_ST.OP_TYP }, true);
    public static final UniqueKey<OperationRecord> KEY_OPERATION_PRIMARY = Internal.createUniqueKey(Operation.OPERATION, DSL.name("KEY_operation_PRIMARY"), new TableField[] { Operation.OPERATION.OP_ID }, true);
    public static final UniqueKey<OpsCodeStRecord> KEY_OPS_CODE_ST_PRIMARY = Internal.createUniqueKey(OpsCodeSt.OPS_CODE_ST, DSL.name("KEY_ops_code_st_PRIMARY"), new TableField[] { OpsCodeSt.OPS_CODE_ST.OPS_CODE }, true);
    public static final UniqueKey<PatientRecord> KEY_PATIENT_PRIMARY = Internal.createUniqueKey(Patient.PATIENT, DSL.name("KEY_patient_PRIMARY"), new TableField[] { Patient.PATIENT.PAT_ID }, true);
    public static final UniqueKey<ProzedurRecord> KEY_PROZEDUR_PRIMARY = Internal.createUniqueKey(Prozedur.PROZEDUR, DSL.name("KEY_prozedur_PRIMARY"), new TableField[] { Prozedur.PROZEDUR.PROZ_ID }, true);
    public static final UniqueKey<RolleRecord> KEY_ROLLE_PRIMARY = Internal.createUniqueKey(Rolle.ROLLE, DSL.name("KEY_rolle_PRIMARY"), new TableField[] { Rolle.ROLLE.OP_ID, Rolle.ROLLE.MED_PERSONAL_PERS_ID }, true);
    public static final UniqueKey<RolleStRecord> KEY_ROLLE_ST_PRIMARY = Internal.createUniqueKey(RolleSt.ROLLE_ST, DSL.name("KEY_rolle_st_PRIMARY"), new TableField[] { RolleSt.ROLLE_ST.ROLLE }, true);
    public static final UniqueKey<StationStRecord> KEY_STATION_ST_PRIMARY = Internal.createUniqueKey(StationSt.STATION_ST, DSL.name("KEY_station_st_PRIMARY"), new TableField[] { StationSt.STATION_ST.STATION }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DiagnoseRecord, DiagnosetypStRecord> FK_DIAGNOSE_DIAGNOSE_TYP_ST = Internal.createForeignKey(Diagnose.DIAGNOSE, DSL.name("fk_diagnose_diagnose_typ_st"), new TableField[] { Diagnose.DIAGNOSE.DIAGNOSETYP }, Keys.KEY_DIAGNOSETYP_ST_PRIMARY, new TableField[] { DiagnosetypSt.DIAGNOSETYP_ST.DIAGNOSETYP }, true);
    public static final ForeignKey<DiagnoseRecord, Icd10CodeStRecord> FK_DIAGNOSE_ICD10_CODE_ST1 = Internal.createForeignKey(Diagnose.DIAGNOSE, DSL.name("fk_diagnose_icd10_code_st1"), new TableField[] { Diagnose.DIAGNOSE.ICD10_CODE }, Keys.KEY_ICD10_CODE_ST_PRIMARY, new TableField[] { Icd10CodeSt.ICD10_CODE_ST.ICD10_CODE }, true);
    public static final ForeignKey<DiagnoseRecord, MedPersonalRecord> FK_DIAGNOSE_MED_PERSONAL1 = Internal.createForeignKey(Diagnose.DIAGNOSE, DSL.name("fk_diagnose_med_personal1"), new TableField[] { Diagnose.DIAGNOSE.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<DiagnoseRecord, MedPersonalRecord> FK_DIAGNOSE_MED_PERSONAL2 = Internal.createForeignKey(Diagnose.DIAGNOSE, DSL.name("fk_diagnose_med_personal2"), new TableField[] { Diagnose.DIAGNOSE.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<DiagnoseRecord, OperationRecord> FK_DIAGNOSE_OPERATION1 = Internal.createForeignKey(Diagnose.DIAGNOSE, DSL.name("fk_diagnose_operation1"), new TableField[] { Diagnose.DIAGNOSE.OP_ID }, Keys.KEY_OPERATION_PRIMARY, new TableField[] { Operation.OPERATION.OP_ID }, true);
    public static final ForeignKey<FachrichtungStationRecord, FachrichtungStRecord> FK_FACHRICHTUNG_STATION_FACHRICHTUNG_ST1 = Internal.createForeignKey(FachrichtungStation.FACHRICHTUNG_STATION, DSL.name("fk_fachrichtung_station_fachrichtung_st1"), new TableField[] { FachrichtungStation.FACHRICHTUNG_STATION.FACHRICHTUNG_ST }, Keys.KEY_FACHRICHTUNG_ST_PRIMARY, new TableField[] { FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG }, true);
    public static final ForeignKey<FachrichtungStationRecord, StationStRecord> FK_FACHRICHTUNG_STATION_STATION_ST1 = Internal.createForeignKey(FachrichtungStation.FACHRICHTUNG_STATION, DSL.name("fk_fachrichtung_station_station_st1"), new TableField[] { FachrichtungStation.FACHRICHTUNG_STATION.STATION_ST }, Keys.KEY_STATION_ST_PRIMARY, new TableField[] { StationSt.STATION_ST.STATION }, true);
    public static final ForeignKey<FallRecord, FallTypStRecord> FK_FALL_FALL_TYP_ST1 = Internal.createForeignKey(Fall.FALL, DSL.name("fk_fall_fall_typ_st1"), new TableField[] { Fall.FALL.FALL_TYP }, Keys.KEY_FALL_TYP_ST_PRIMARY, new TableField[] { FallTypSt.FALL_TYP_ST.FALL_TYP_ID }, true);
    public static final ForeignKey<FallRecord, MedPersonalRecord> FK_FALL_MED_PERSONAL1 = Internal.createForeignKey(Fall.FALL, DSL.name("fk_fall_med_personal1"), new TableField[] { Fall.FALL.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<FallRecord, MedPersonalRecord> FK_FALL_MED_PERSONAL2 = Internal.createForeignKey(Fall.FALL, DSL.name("fk_fall_med_personal2"), new TableField[] { Fall.FALL.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<FallRecord, PatientRecord> FK_FALL_PATIENT = Internal.createForeignKey(Fall.FALL, DSL.name("fk_fall_patient"), new TableField[] { Fall.FALL.PAT_ID }, Keys.KEY_PATIENT_PRIMARY, new TableField[] { Patient.PATIENT.PAT_ID }, true);
    public static final ForeignKey<FallRecord, StationStRecord> FK_FALL_STATION_ST1 = Internal.createForeignKey(Fall.FALL, DSL.name("fk_fall_station_st1"), new TableField[] { Fall.FALL.STATION_ST }, Keys.KEY_STATION_ST_PRIMARY, new TableField[] { StationSt.STATION_ST.STATION }, true);
    public static final ForeignKey<MedPersonalRecord, FachrichtungStRecord> FK_MED_PERSONAL_FACHRICHTUNG_ST1 = Internal.createForeignKey(MedPersonal.MED_PERSONAL, DSL.name("fk_med_personal_fachrichtung_st1"), new TableField[] { MedPersonal.MED_PERSONAL.FACHRICHTUNG }, Keys.KEY_FACHRICHTUNG_ST_PRIMARY, new TableField[] { FachrichtungSt.FACHRICHTUNG_ST.ABTEILUNG }, true);
    public static final ForeignKey<OperationRecord, FallRecord> FK_OPERATION_FALL1 = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_fall1"), new TableField[] { Operation.OPERATION.FALL_ID }, Keys.KEY_FALL_PRIMARY, new TableField[] { Fall.FALL.FALL_ID }, true);
    public static final ForeignKey<OperationRecord, MedPersonalRecord> FK_OPERATION_MED_PERSONAL1 = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_med_personal1"), new TableField[] { Operation.OPERATION.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<OperationRecord, MedPersonalRecord> FK_OPERATION_MED_PERSONAL2 = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_med_personal2"), new TableField[] { Operation.OPERATION.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<OperationRecord, NarkoseStRecord> FK_OPERATION_NARKOSE_ST1 = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_narkose_st1"), new TableField[] { Operation.OPERATION.NARKOSE_ST }, Keys.KEY_NARKOSE_ST_PRIMARY, new TableField[] { NarkoseSt.NARKOSE_ST.NARKOSE }, true);
    public static final ForeignKey<OperationRecord, OpSaalStRecord> FK_OPERATION_OP_SAAL_ST = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_op_saal_st"), new TableField[] { Operation.OPERATION.OP_SAAL }, Keys.KEY_OP_SAAL_ST_PRIMARY, new TableField[] { OpSaalSt.OP_SAAL_ST.CODE }, true);
    public static final ForeignKey<OperationRecord, OpTypStRecord> FK_OPERATION_OP_TYP_ST1 = Internal.createForeignKey(Operation.OPERATION, DSL.name("fk_operation_op_typ_st1"), new TableField[] { Operation.OPERATION.OP_TYP_ST }, Keys.KEY_OP_TYP_ST_PRIMARY, new TableField[] { OpTypSt.OP_TYP_ST.OP_TYP }, true);
    public static final ForeignKey<PatientRecord, BlutgruppeStRecord> FK_PATIENT_BLUTGRUPPE_ST1 = Internal.createForeignKey(Patient.PATIENT, DSL.name("fk_patient_blutgruppe_st1"), new TableField[] { Patient.PATIENT.BLUTGRUPPE }, Keys.KEY_BLUTGRUPPE_ST_PRIMARY, new TableField[] { BlutgruppeSt.BLUTGRUPPE_ST.BLUTGRUPPE }, true);
    public static final ForeignKey<PatientRecord, GeschlechtStRecord> FK_PATIENT_GESCHLECHT_ST1 = Internal.createForeignKey(Patient.PATIENT, DSL.name("fk_patient_geschlecht_st1"), new TableField[] { Patient.PATIENT.GESCHLECHT }, Keys.KEY_GESCHLECHT_ST_PRIMARY, new TableField[] { GeschlechtSt.GESCHLECHT_ST.GESCHLECHT }, true);
    public static final ForeignKey<PatientRecord, MedPersonalRecord> FK_PATIENT_MED_PERSONAL_ST1 = Internal.createForeignKey(Patient.PATIENT, DSL.name("fk_patient_med_personal_st1"), new TableField[] { Patient.PATIENT.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<PatientRecord, MedPersonalRecord> FK_PATIENT_MED_PERSONAL_ST2 = Internal.createForeignKey(Patient.PATIENT, DSL.name("fk_patient_med_personal_st2"), new TableField[] { Patient.PATIENT.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<ProzedurRecord, MedPersonalRecord> FK_PROZEDUR_MED_PERSONAL1 = Internal.createForeignKey(Prozedur.PROZEDUR, DSL.name("fk_prozedur_med_personal1"), new TableField[] { Prozedur.PROZEDUR.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<ProzedurRecord, MedPersonalRecord> FK_PROZEDUR_MED_PERSONAL2 = Internal.createForeignKey(Prozedur.PROZEDUR, DSL.name("fk_prozedur_med_personal2"), new TableField[] { Prozedur.PROZEDUR.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<ProzedurRecord, OperationRecord> FK_PROZEDUR_OPERATION1 = Internal.createForeignKey(Prozedur.PROZEDUR, DSL.name("fk_prozedur_operation1"), new TableField[] { Prozedur.PROZEDUR.OP_ID }, Keys.KEY_OPERATION_PRIMARY, new TableField[] { Operation.OPERATION.OP_ID }, true);
    public static final ForeignKey<ProzedurRecord, OpsCodeStRecord> FK_PROZEDUR_OPS_CODE_ST1 = Internal.createForeignKey(Prozedur.PROZEDUR, DSL.name("fk_prozedur_ops_code_st1"), new TableField[] { Prozedur.PROZEDUR.OPS_CODE }, Keys.KEY_OPS_CODE_ST_PRIMARY, new TableField[] { OpsCodeSt.OPS_CODE_ST.OPS_CODE }, true);
    public static final ForeignKey<RolleRecord, MedPersonalRecord> FK_ROLLE_MED_PERSONAL1 = Internal.createForeignKey(Rolle.ROLLE, DSL.name("fk_rolle_med_personal1"), new TableField[] { Rolle.ROLLE.BEARBEITER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<RolleRecord, MedPersonalRecord> FK_ROLLE_MED_PERSONAL2 = Internal.createForeignKey(Rolle.ROLLE, DSL.name("fk_rolle_med_personal2"), new TableField[] { Rolle.ROLLE.ERSTELLER }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<RolleRecord, MedPersonalRecord> FK_ROLLE_MED_PERSONAL3 = Internal.createForeignKey(Rolle.ROLLE, DSL.name("fk_rolle_med_personal3"), new TableField[] { Rolle.ROLLE.MED_PERSONAL_PERS_ID }, Keys.KEY_MED_PERSONAL_PRIMARY, new TableField[] { MedPersonal.MED_PERSONAL.PERS_ID }, true);
    public static final ForeignKey<RolleRecord, OperationRecord> FK_ROLLE_OPERATION1 = Internal.createForeignKey(Rolle.ROLLE, DSL.name("fk_rolle_operation1"), new TableField[] { Rolle.ROLLE.OP_ID }, Keys.KEY_OPERATION_PRIMARY, new TableField[] { Operation.OPERATION.OP_ID }, true);
    public static final ForeignKey<RolleRecord, RolleStRecord> FK_ROLLE_ROLLE_ST = Internal.createForeignKey(Rolle.ROLLE, DSL.name("fk_rolle_rolle_st"), new TableField[] { Rolle.ROLLE.ROLLE_ST }, Keys.KEY_ROLLE_ST_PRIMARY, new TableField[] { RolleSt.ROLLE_ST.ROLLE }, true);
}
